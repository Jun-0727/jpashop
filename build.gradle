// querydsl 추가
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"		// querydsl 추가

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// Lombok 때문에 생긴 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 뒤에 버전 정보가 없는 라이브러리들은 스프링부트가 자기 버전에 맞는 라이브러리들의 버전을 이미 세팅해놨기 때문!
	// 스프링부트가 세팅 안해놓은 라이브러리들은 뒤에 버전정보 붙여줘야해
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//implementation 'org.springframework.boot:spring-boot-starter-validation-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	implementation 'junit:junit:4.12'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.querydsl:querydsl-jpa'		// querydsl 추가
	implementation 'com.querydsl:querydsl-apt'		// querydsl 추가

}

tasks.named('test') {
	useJUnitPlatform()
}


/**
 *  querydsl 세팅
 */
def querydslDir = 'src/main/generated'
// def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		} }
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}